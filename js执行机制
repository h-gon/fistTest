2.javascript事件循环
当我们打开网站的时候，网页的渲染其实是一堆同步任务，不如页面骨架和页面元素的渲染，但是想图片音乐等占用资源大耗时久的任务就是异步任务，
异步执行：

1.所有同步任务偶在主线程上执行，形成一个很执行栈
2.主线程之外，还存在一个任务队列（task queue）只要异步任务有了运行结果，就在“任务队列”之中放置一个事件。
3.一旦“执行栈”中的所有同步任务执行完毕，系统就会读取“任务队列”，看看里面有哪些事件。那些对应的异步任务，就结束等待状态，进入执行栈开始被执行。
4.主线程不断重复以上三步。
js引擎存在monitoring process进程，会持续不断的检查主线程执行栈是否为空，一旦为空，就会去Event Queue那里检查是否有等待被调用的函数。
![N]M]_N{OL(HBZ`B89REKMQ9.png](https://upload-images.jianshu.io/upload_images/9374643-598ff6c029970ff9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)


同步和异步分别进入到不同的执行场所，同步进入到主线程，异步的进入到event table 并注册函数
当指定事件完成之后，event table 会将函数移入到event queue
当主线程的任务执行完毕之后，会把event queue里面读取对应的函数进入主线程执行
上述过程会不断循环，形成event loop(事件循环)

作者：月半女那
链接：https://www.jianshu.com/p/b8234b3314c8
来源：简书
简书著作权归作者所有，任何形式的转载都请联系作者获得授权并注明出处。
